<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.niit.group5.mapper.ExchangeMapper">

    <resultMap id="BaseResultMap" type="cn.niit.group5.entity.Exchange">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="like" jdbcType="INTEGER" property="like"/>
        <result column="is_delete" jdbcType="TINYINT" property="isDelete"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="img" jdbcType="VARCHAR" property="img"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
    </resultMap>
    <select id="getUserById" parameterType="Integer"
            resultType="User">
      SELECT u.*
    FROM t_user u WHERE u.id=#{id}
  </select>
    <select id="getExchangeDetailById" parameterType="Integer" resultMap="exchangeRM1">
        SELECT * FROM t_exchange WHERE id=#{0}
    </select>
    <select id="getRepliesByQuestionId" parameterType="Integer"
            resultType="cn.niit.group5.entity.Reply">
    select * from t_reply where exchange_id=#{0}
  </select>
    <resultMap id="exchangeRM1" type="exchange" extends="BaseResultMap">
        <association property="user" select="getUserById" column="user_id">
        </association>
        <association property="replyAmount" column="id" select="getExchangeReplyNumber">
        </association>
        <collection property="replies" select="getRepliesByExchangeId" column="id">
        </collection>
    </resultMap>


    <resultMap id="columnProperty" type="exchange">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="content" property="content"/>
        <result column="create_time" property="createTime"/>
        <result column="is_delete" property="isDelete"/>
    </resultMap>


    <select id="getExchangeList" resultMap="exchangeRM">
    SELECT e.id, e.content,e.user_id euid,e.create_time,e.like,e.img,e.address
  FROM t_exchange e,t_user u
  WHERE
  e.user_id=u.id
  AND e.is_delete=0
     ORDER BY create_time DESC
  </select>
    <select id="getRepliesByExchangeId" parameterType="Integer"
            resultMap="cn.niit.group5.mapper.ReplyMapper.BaseResultMap">
  SELECT r.*,u.user_name,u.user_address,u.identity,u.head_url
  FROM t_reply r,t_user u
        WHERE r.is_delete=0
        AND r.exchange_id=#{0}
        AND r.user_id=u.id
                ORDER BY reply_time DESC
    </select>

    <resultMap id="exchangeRM" type="Exchange" extends="BaseResultMap">
        <id column="id" property="id"/>
        <result column="euid" property="userId"/>
        <association property="user" select="cn.niit.group5.mapper.QuestionMapper.getUserById"
                     column="euid">
        </association>
        <association property="replyAmount" column="id" select="getExchangeReplyNumber">
        </association>
    </resultMap>

    <select id="getExchangeReplyNumber" resultType="Integer" parameterType="Integer">
          SELECT COUNT(exchange_id) replyAmount FROM t_reply r
  WHERE r.exchange_id=#{0}
  AND r.is_delete=0
    </select>

    <insert id="insertExchange" parameterType="cn.niit.group5.entity.Exchange"
            useGeneratedKeys="true" keyProperty="id">
   INSERT INTO t_exchange(user_id,content,create_time,address) VALUES
   (#{userId},#{content},#{createTime},#{address})
 </insert>


    <select id="getExchangeListByUserId" parameterType="Integer" resultMap="exchangeRM">
     SELECT e.id,e.user_id euid,e.content,e.like,e.create_time
      FROM t_exchange e
      WHERE e.user_id=#{0}
     and is_delete=0
      ORDER BY create_time DESC
  </select>

    <update id="updateStatus" parameterType="Integer">
        update t_like
        <trim prefix="set" >
            <if test="status lt 1">status=1</if>
            <if test="status gt 0">status=0</if>
        </trim>
        where id=#{id}
    </update>
</mapper>