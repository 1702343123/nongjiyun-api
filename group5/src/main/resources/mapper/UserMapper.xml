<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.niit.group5.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.niit.group5.entity.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="phone_number" property="phoneNumber" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="regitster_time" property="regitsterTime" jdbcType="DATE" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="identity" property="identity" jdbcType="INTEGER" />
    <result column="user_address" property="userAddress" jdbcType="VARCHAR" />
    <result column="unit_name" property="unitName" jdbcType="VARCHAR" />
    <result column="plant_category" property="plantCategory" jdbcType="INTEGER" />
    <result column="plant_size" property="plantSize" jdbcType="VARCHAR" />
    <result column="check_all" property="checkAll" jdbcType="INTEGER" />
    <result column="check_continuous" property="checkContinuous" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="is_forbidden" property="isForbidden" jdbcType="TINYINT" />
    <result column="educational" property="educational" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="vocation" property="vocation" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <result column="head_url" property="headUrl" jdbcType="LONGVARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.niit.group5.entity.User" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user (phone_number, user_name, `password`, 
      regitster_time, sex, `identity`, 
      user_address, unit_name, plant_category, 
      plant_size, check_all, check_continuous, 
      score, is_forbidden, educational, 
      email, vocation, is_delete, 
      head_url)
    values (#{phoneNumber,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{regitsterTime,jdbcType=DATE}, #{sex,jdbcType=TINYINT}, #{identity,jdbcType=INTEGER}, 
      #{userAddress,jdbcType=VARCHAR}, #{unitName,jdbcType=VARCHAR}, #{plantCategory,jdbcType=INTEGER}, 
      #{plantSize,jdbcType=VARCHAR}, #{checkAll,jdbcType=INTEGER}, #{checkContinuous,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER}, #{isForbidden,jdbcType=TINYINT}, #{educational,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{vocation,jdbcType=VARCHAR}, #{isDelete,jdbcType=TINYINT}, 
      #{headUrl,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.niit.group5.entity.User" >
    update t_user
    set phone_number = #{phoneNumber,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      regitster_time = #{regitsterTime,jdbcType=DATE},
      sex = #{sex,jdbcType=TINYINT},
      `identity` = #{identity,jdbcType=INTEGER},
      user_address = #{userAddress,jdbcType=VARCHAR},
      unit_name = #{unitName,jdbcType=VARCHAR},
      plant_category = #{plantCategory,jdbcType=INTEGER},
      plant_size = #{plantSize,jdbcType=VARCHAR},
      check_all = #{checkAll,jdbcType=INTEGER},
      check_continuous = #{checkContinuous,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      is_forbidden = #{isForbidden,jdbcType=TINYINT},
      educational = #{educational,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      vocation = #{vocation,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=TINYINT},
      head_url = #{headUrl,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, phone_number, user_name, `password`, regitster_time, sex, `identity`, 
    user_address, unit_name, plant_category, plant_size, check_all, check_continuous, 
    score, is_forbidden, educational, email, vocation, is_delete, head_url
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, phone_number, user_name, `password`, regitster_time, sex, `identity`,
    user_address, unit_name, plant_category, plant_size, check_all, check_continuous,
    score, is_forbidden, educational, email, vocation, is_delete, head_url
    from t_user
  </select>
  <select id="getUserByPhoneNumber" resultMap="BaseResultMap" parameterType="String" >
    select  * from t_user where phone_number=#{phoneNumber} and is_delete=0
  </select>

  <sql id="signUpColumns">
    <trim suffixOverrides=",">
      <if test="phoneNumber!=null">phone_number,</if>
      <if test="password!=null">password,</if>
      <if test="userName!=null">user_name,</if>
      <if test="identity!=null">identity,</if>
      <if test="userAddress!=null">user_address,</if>
      <if test="regitsterTime!=null">regitster_time,</if>
      <if test="isForbidden!=null">is_forbidden</if>
    </trim>
  </sql>
  <sql id="signUpValues">
    <trim suffixOverrides=",">
      <if test="phoneNumber!=null">#{phoneNumber},</if>
      <if test="password!=null">#{password},</if>
      <if test="userName!=null">#{userName},</if>
      <if test="identity!=null">#{identity},</if>
      <if test="userAddress!=null">#{userAddress},</if>
      <if test="regitsterTime!=null">#{regitsterTime},</if>
      <if test="isForbidden!=null">#{isForbidden}</if>
    </trim>
  </sql>
  <insert id="signUp" parameterType="cn.niit.group5.entity.User">
    insert into t_user(<include refid="signUpColumns"></include>)
    values (<include refid="signUpValues"></include>)
  </insert>

</mapper>