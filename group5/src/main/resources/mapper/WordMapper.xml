<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.niit.group5.mapper.WordMapper" >
  <resultMap id="BaseResultMap" type="cn.niit.group5.entity.Word" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    update t_word
    set is_delete=1
    where id=#{0}
  </delete>
  <insert id="insert" parameterType="cn.niit.group5.entity.Word" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_word (`name`, `count`, `status`, 
      is_delete)
    values (#{name,jdbcType=VARCHAR}, #{count,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=INTEGER})
  </insert>
  <update id="updateWord" parameterType="cn.niit.group5.entity.Word" >
    update t_word
    set `name` = #{name,jdbcType=VARCHAR},
      `count` = #{count,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, `name`, `count`, `status`, is_delete
    from t_word
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="map" >
    select id, `name`, `count`, `status`, is_delete
    from t_word
    where is_delete=0
    limit #{index},#{pageSize}
  </select>
  
  <update id="disableWord" parameterType="Integer">
    update t_word
    set status=#{status}
    where id=#{id}
  </update>

  <select id="searchByName" parameterType="map">
    select * from t_word
    where name like concat('%',#{name},'%')
    limit #{index},#{pageSize}
  </select>
</mapper>