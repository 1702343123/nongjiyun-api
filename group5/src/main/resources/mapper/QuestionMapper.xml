<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.niit.group5.mapper.QuestionMapper" >

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.niit.group5.entity.Question" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_question (user_id, content, create_time, 
      sort, is_exchange_reply, is_delete
      )
    values (#{userId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, 
      #{sort,jdbcType=VARCHAR}, #{isExchangeReply,jdbcType=TINYINT}, #{isDelete,jdbcType=TINYINT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.niit.group5.entity.Question" >
    update t_question
    set user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      sort = #{sort,jdbcType=VARCHAR},
      is_exchange_reply = #{isExchangeReply,jdbcType=TINYINT},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, user_id, content, create_time, sort, is_exchange_reply, is_delete
    from t_question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAllByUserId" resultMap="BaseResultMap" parameterType="int" >
   SELECT q.*,r.id rid,r.content rcon,r.user_id ruid,r.question_id,r.exchange_id,r.is_exchange_reply,r.reply_time,r.like,r.is_delete rdel,
     u.head_url,u.user_name,u.identity,u.score,u.phone_number,u.user_address
    FROM t_question q ,t_reply r,t_user u WHERE
    q.user_id=#{0}
    AND q.id=r.question_id
     AND q.is_delete=0 AND r.is_delete=0
    AND r.user_id=u.id
     AND r.is_exchange_reply=0
  </select>
  <resultMap id="BaseResultMap" type="cn.niit.group5.entity.Question" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="sort" property="sort" jdbcType="VARCHAR" />
    <result column="is_exchange_reply" property="isExchangeReply" jdbcType="TINYINT" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <collection property="replies" ofType="cn.niit.group5.entity.Reply" select="getRepliesByQuestionId"
                column="id">
      <id column="ruid" property="id"/>
      <result column="rcon" property="content"/>
      <association property="user" javaType="cn.niit.group5.entity.User"
                   select="getUserById" column="ruid"></association>
    </collection>
  </resultMap>
  <select id="getRepliesByQuestionId" parameterType="Integer"
          resultType="cn.niit.group5.entity.Reply">
    select * from t_reply where question_id=#{0}
  </select>

  <select id="getUserById" parameterType="int" resultType="user">
      SELECT u.head_url,u.user_name,u.identity,u.score,u.phone_number,u.user_address
    FROM t_user u WHERE u.id=#{0}
  </select>

  <select id="getQuestionListByUserId" parameterType="int" resultType="question">
     SELECT q.id,q.content FROM t_question q WHERE q.user_id=#{0}
  </select>

  <select id="getQuestionDetail" parameterType="int" resultMap="questionRM">
     SELECT q.*,r.id rid ,r.user_id ruid,r.content rcon,r.reply_time,r.like,u.head_url,u.user_name,u.user_address,u.identity
 FROM t_question q,t_reply r,t_user u
  WHERE r.question_id=q.id
  AND q.user_id=u.id
  AND q.id=#{0}
  </select>
  <resultMap id="questionRM" type="question">
    <id column="id" property="id"/>
    <result column="user_id" property="userId"/>
    <result column="content" property="content"/>
    <result column="create_time" property="createTime"/>
    <result column="sort" property="sort"/>
    <result column="is_exchange_reply" property="isExchangeReply"/>
    <result column="is_delete" property="isDelete"/>
    <collection property="replies" ofType="Reply">
      <id column="rid" property="id"/>
      <result column="ruid" property="userId"/>
      <result column="rcon" property="content"/>
      <result column="reply_time" property="replyTime"/>
      <result column="like" property="like"/>
      <association property="user" select="getUserById" column="ruid">
      </association>
    </collection>
  </resultMap>
<!--  <select id="getUserById" parameterType="int" resultType="user">-->
<!--  SELECT u.id, u.head_url,u.user_name,u.user_address,u.identity,u.score,u.phone_number FROM t_user u-->
<!--  where u.id=#{0}-->
<!--  </select>-->
</mapper>